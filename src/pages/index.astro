---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import type { MarkdownInstance } from "astro";
import path from "path";
import { getNotes } from '../components/Notes.astro';

let readme: MarkdownInstance<Record<string, any>> | null = null;
try {
  const items = await Astro.glob("../../notes/readme.md");
  readme = items[0];
} catch (error) {}
const { Content } = readme || { Content: () => null };

const notesPath = path.join(process.cwd(), "notes");
console.log(`CWD: ${process.cwd()}, Notes path: ${notesPath}`)
const notes = await getNotes(); // Loads all notes from disk
const readmes = { "posts": "Intro", "books": "Intro" }
const recents = { "posts": [], "books": [] }
const CATEGORIES = ["posts", "books"]

// TODO: load recent notes (per category: maxcount=3, maxage=6m)
let notesCount = 0;
notes.forEach((note) => {
	const { name, type } = note.params;
	if (/readme.md$/.test(note.props.file)) {
		if (readmes[type]) readmes[type] = note;
		return; // don't further process readmes
	}
	if (typeof recents[type] !== 'undefined') {
		notesCount++
		recents[type].push(note);
	}
})
//console.log("READMES", readmes)
//console.log("RECENT", JSON.stringify(recents));

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			{
				readme != null && (<article><Content /></article>)
			}
			<hr/>
			<p>There are {notesCount} notes across {CATEGORIES.length} categories.</p>
			<hr/>
			{CATEGORIES.map((category) => (
				<label>Recent {category} ({recents[category].length})</label>
				<ol>
					{recents[category].map((note) => (
						<li><a href={note.params.slug}>{note.props.frontmatter.title}</a> ({note.params.pubDate})</li>
					))}
				</ol>
				<a href={category}>All {category} ({recents[category].length})</a>
				<hr/>
			))}
			<hr/>
		</main>
		<Footer />
	</body>
</html>
