---
import { type CollectionEntry, getCollection } from 'astro:content';
import NotePost from '../layouts/NotePost.astro';
import IndexPage from '../layouts/IndexPage.astro';
import TagPage from '../layouts/TagPage.astro';
import { getNotes, getPubDateForNote, getSlugForNote, getTypeForNote } from '../components/Notes.astro';
import type { MarkdownInstance } from "astro";
import PullQuote from '../components/PullQuote.astro';

export async function getStaticPaths() {
  return await getNotes();
  // const aliases = await getAliasPaths(notes);
  // console.log(notes.slice(0,3).concat(aliases))
	// return notes.concat(aliases);
}
console.log(`Requested URL: ${Astro.request.url}, slug: ${Astro.params.slug}  , `);

type Props = MarkdownInstance<Record<string, any>> & { redirectTo?: string };
console.log(`Rendering ${JSON.stringify(Astro)}`);
const post = Astro.props;
const { Content } = post;

const pubDate = getPubDateForNote(post)
const isReadme = (/readme.md$/.test(post.file))
const slug = Astro.params.slug || getSlugForNote(post);
const type = slug.substring(0, slug.indexOf("/", 1));
const isRedirect = typeof post.redirectTo != 'undefined' && post.redirectTo.length > 0;
const isTag = 'tags' === type || 'tag' === type;

console.log(`Rendering ${slug} (${post.file}) with pubDate: ${pubDate}, type: ${type} isReadme: ${isReadme}, isRedirect: ${isRedirect}, isTag: ${isTag} to ${JSON.stringify(post)}`);
---

{(pubDate &&
<NotePost {...post} pubDate={pubDate} title={post.frontmatter.title} description={post.frontmatter.description} >
  <Content  components={{ PullQuote }}/>
</NotePost>
)}
{( (isReadme || isTag) && 
  <meta charset="utf-8"/>
  <IndexPage {...post} >
    {(isReadme && <article><Content /></article>)}
  </IndexPage>
)}

{(isRedirect && 
  <>
    <!doctype html>
    <title>Redirecting to: ${post.redirectTo}</title>
    <meta http-equiv="refresh" content={`0;url=${post.redirectTo}`} />
    <meta name="robots" content="noindex">
    <link rel="canonical" href={`${post.redirectTo}`}>
    <body>
      <p>Content was moved to <a href={`${post.redirectTo}`}>{post.redirectTo}</a></p>
    </body>
  </>
)}