---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import StarRating from '../components/StarRating.astro';
import { getTypeForNote } from '../components/Notes.astro';
import AlsoOn from '../components/AlsoOn.astro';

type Props = CollectionEntry<'blog'>['data'];

console.log("NotePost.astro", JSON.stringify(Astro.props), Astro.params)


const { title, description, pubDate, updatedDate, heroImage } = Astro.props
const note = Astro.props
const type = getTypeForNote(Astro.props)
const typeurl = "/"+type
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={new Date(pubDate)} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<div class="frontmatter">
						{type === "books" ? (
						  <ul class="props">
							<li>Author: {note.frontmatter?.author}</li>
							<li>Page count: {note.frontmatter.pageCount}</li>
							<li>Started on: {note.frontmatter.startedDate}</li>
							<li>Finished on: {note.frontmatter.finishedDate}</li>
							<li>Rating: {note.frontmatter.rating} out of 5 stars</li> <!-- render star rating -->
							<StarRating rating={note.frontmatter.rating} />
						  </ul>
						  <hr/>
						) : ( "" )}
						<AlsoOn links={note.frontmatter?.alsoOn} />
					</div>
					<slot />
				</div>
				<nav>Back to all <a href={typeurl}>{type}</a></nav>
			</article>
		</main>
		<Footer />
	</body>
</html>
